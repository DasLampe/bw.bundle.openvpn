tls-client

dev tun

proto udp

remote ${node.metadata.get('openvpn', {}).get('server_ip', node.metadata['interfaces'][node.metadata['main_interface']]['ip_addresses'][0])} ${node.metadata.get('openvpn', {}).get('port', '1194')}

resolv-retry infinite

nobind

pull
resolv-retry 86400

persist-key
persist-tun

# Wireless networks often produce a lot
# of duplicate packets.  Set this flag
# to silence duplicate packet warnings.
mute-replay-warnings

ca ca.crt
cert ${client}.crt
key ${client}.key

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
;remote-cert-tls server

# If a tls-auth key is used on the server
# then every client must also have the key.
tls-auth ta.key 1

cipher AES-256-CBC


#comp-lzo

# Set log file verbosity.
verb 3

# Silence repeating messages
mute 10